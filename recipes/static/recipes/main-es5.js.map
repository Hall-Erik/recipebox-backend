{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/recipes/recipe-card/recipe-card.component.html","webpack:///./src/app/recipes/recipe-create/recipe-create.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-form/recipe-form.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/users/login/login.component.html","webpack:///./src/app/users/register/register.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/models/recipe.ts","webpack:///./src/app/recipes/recipe-card/recipe-card.component.css","webpack:///./src/app/recipes/recipe-card/recipe-card.component.ts","webpack:///./src/app/recipes/recipe-create/recipe-create.component.css","webpack:///./src/app/recipes/recipe-create/recipe-create.component.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-form/recipe-form.component.css","webpack:///./src/app/recipes/recipe-form/recipe-form.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/services/recipe.interceptor.ts","webpack:///./src/app/services/recipe.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/users/login/login.component.css","webpack:///./src/app/users/login/login.component.ts","webpack:///./src/app/users/register/register.component.css","webpack:///./src/app/users/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<header>\\n  <app-header></app-header>\\n</header>\\n<main role=\\\"main\\\" class=\\\"container-fluid mt-3\\\">\\n  <router-outlet></router-outlet>\\n</main>\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md bg-gray navbar-dark\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/index\\\">recipe_box</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/index\\\">Home</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"logged_in\\\" routerLink=\\\"/recipes/create\\\">New Recipe</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"!logged_in\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"!logged_in\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li class=\\\"dropdown show\\\" *ngIf=\\\"logged_in\\\">\\n            <a class=\\\"nav-item nav-link dropdown-toggle\\\"\\n            href=\\\"#\\\" role=\\\"button\\\" id=\\\"dropdownMenuLink\\\"\\n            data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\">{{userService.user.username}}</a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\"\\n            aria-labelledby=\\\"dropdownMenuLink\\\">\\n              <a class=\\\"dropdown-item link\\\" >User Stats</a>\\n              <a class=\\\"dropdown-item link\\\" >Account Settings</a>\\n              <a class=\\\"dropdown-item link\\\" (click)=\\\"logout()\\\">Logout</a>\\n            </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","module.exports = \"<div class=\\\"card h-100\\\">\\n  <div class=\\\"card-img-top home-recipe-pic-div\\\">\\n    <img *ngIf=\\\"recipe.image_file\\\" class=\\\"home-recipe-pic\\\" src=\\\"{{recipe.image_file}}\\\" />\\n    <img *ngIf=\\\"!recipe.image_file\\\" class=\\\"home-recipe-pic\\\" src=\\\"assets/img/default.png\\\" />\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"card-title\\\"><a>{{recipe.title}}</a></h4>\\n    <small class=\\\"card-text text-muted\\\">\\n      Author: <a>{{recipe.user.username}}</a>\\n    </small>\\n    <p class=\\\"card-text\\\">{{ recipe.description }}</p>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container mb-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8 offset-sm-2 content-section\\\">\\n      <h2>Add a Recipe</h2>\\n      <app-recipe-form (recipeSubmit)=\\\"submit($event)\\\"></app-recipe-form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div *ngIf=\\\"recipe\\\" class=\\\"content-section\\\">\\n  <div class=\\\"d-flex flex-wrap\\\">\\n    <div class=\\\"mr-auto p-2 bd-highlight\\\">\\n      <h2>{{recipe.title}}</h2>\\n    </div>\\n    <div *ngIf=\\\"owner\\\" class=\\\"p-2 bd-highlight\\\">\\n      <a class=\\\"btn btn-outline-info\\\" routerLink=\\\"/recipe/{{recipe.id}}/edit\\\">Edit</a>\\n      <button class=\\\"btn btn-outline-danger\\\"\\n      (click)=\\\"delete()\\\">Delete</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 col-md-3\\\">\\n      <img *ngIf=\\\"recipe.image_file\\\" class=\\\"recipe-pic\\\" src=\\\"{{recipe.image_file}}\\\" />\\n      <img *ngIf=\\\"!recipe.image_file\\\" class=\\\"recipe-pic\\\" src=\\\"assets/img/default.png\\\" />\\n    </div>\\n    <div class=\\\"col-sm-12 col-md-9\\\">\\n      <div class=\\\"row\\\">\\n        <small class=\\\"text-muted\\\">\\n          User: <a>{{recipe.user.username}}</a> | Cook time: {{recipe.cook_time}} minutes | Serves: {{ recipe.servings }}\\n        </small>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <p>{{recipe.description}}</p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-2\\\">\\n    <div *ngIf=\\\"logged_in\\\">\\n      <input *ngIf=\\\"recipe.made_it\\\" type=\\\"button\\\" id=\\\"made-it\\\"\\n      class=\\\"btn btn-outline-success\\\" value=\\\"✓ Made it.\\\"\\n      (click)=\\\"unmake()\\\" />\\n      <input *ngIf=\\\"!recipe.made_it\\\" type=\\\"button\\\" id=\\\"made-it\\\"\\n       class=\\\"btn btn-success\\\" value=\\\"Made it?\\\"\\n       (click)=\\\"make()\\\" />\\n    </div>\\n    <div class=\\\"ml-1\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div *ngIf=\\\"recipe.ingredients\\\" class=\\\"col-sm-12 col-md-4\\\">\\n      <div class=\\\"row\\\">\\n        <h3>Ingredients</h3>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of recipe.ingredients.split('\\\\n')\\\">\\n            {{ingredient}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\t\\n    <div *ngIf=\\\"recipe.directions\\\" class=\\\"col-sm-12 col-md-8\\\">\\n      <div class=\\\"row\\\">\\t\\t\\t\\n        <h3>Directions</h3>\\n      </div>\\t\\n      <div class=\\\"row\\\">\\n        <ol>\\n          <li *ngFor=\\\"let direction of recipe.directions.split('\\\\n')\\\">\\n            {{direction}}\\n          </li>\\n        </ol>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container mb-3\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8 offset-sm-2 content-section\\\">\\n        <h2>Edit Recipe</h2>\\n        <app-recipe-form [recipe]=\\\"recipe\\\" (recipeSubmit)=\\\"update($event)\\\"></app-recipe-form>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"<form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Title</label>\\n    <input type=\\\"text\\\" formControlName=\\\"title\\\"\\n    class=\\\"form-control\\\" placeholder=\\\"Omelette du Fromage\\\"\\n    [ngClass]=\\\"{'is-invalid': title.invalid && title.touched}\\\">\\n    <div class=\\\"form-errors\\\"\\n    *ngIf=\\\"title.invalid && title.touched\\\">\\n      <small>\\n        <p *ngIf=\\\"title.errors.required\\\">This field is required.</p>\\n      </small>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Description</label>\\n    <textarea formControlName=\\\"description\\\"\\n    class=\\\"form-control\\\" placeholder=\\\"This recipe is very good.\\\"\\n    [ngClass]=\\\"{'is-invalid': description.invalid && description.touched}\\\"></textarea>\\n    <div class=\\\"form-errors\\\"\\n    *ngIf=\\\"description.invalid && description.touched\\\">\\n      <small>\\n        <p *ngIf=\\\"description.errors.required\\\">This field is required.</p>\\n      </small>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"servings\\\">Servings</label>\\n    <input type=\\\"number\\\" formControlName=\\\"servings\\\"\\n    class=\\\"form-control\\\" placeholder=\\\"3-4\\\"\\n    [ngClass]=\\\"{'is-invalid': servings.invalid && servings.touched}\\\">\\n    <div class=\\\"form-errors\\\"\\n    *ngIf=\\\"servings.invalid && servings.touched\\\">\\n      <small>\\n        <p *ngIf=\\\"servings.errors.required\\\">This field is required.</p>\\n      </small>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"cook_time\\\">Cook Time (minutes)</label>\\n    <input type=\\\"number\\\" formControlName=\\\"cook_time\\\"\\n    class=\\\"form-control\\\" placeholder=\\\"35\\\"\\n    [ngClass]=\\\"{'is-invalid': cook_time.invalid && cook_time.touched}\\\">\\n    <div class=\\\"form-errors\\\"\\n    *ngIf=\\\"cook_time.invalid && cook_time.touched\\\">\\n      <small>\\n        <p *ngIf=\\\"cook_time.errors.required\\\">This field is required.</p>\\n      </small>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"img_file\\\">Upload Image</label>\\n    <input class=\\\"form-control-file\\\" type=\\\"file\\\" id=\\\"img_file\\\" name=\\\"img_file\\\"\\n    (change)=\\\"upload_image($event)\\\" accept=\\\"image/*\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <img *ngIf=\\\"img_preview\\\"\\n    [src]=\\\"sanitizer.bypassSecurityTrustUrl(img_preview)\\\">\\n    <img *ngIf=\\\"!img_preview\\\"\\n    src=\\\"assets/img/default.png\\\">\\n    <br>\\n  </div>\\n\\n  <input type=\\\"text\\\" formControlName=\\\"image_file\\\" hidden>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"ingredients\\\">Ingredients</label>\\n    <textarea formControlName=\\\"ingredients\\\"\\n    class=\\\"form-control\\\" rows=\\\"5\\\"\\n    [ngClass]=\\\"{'is-invalid': ingredients.invalid && ingredients.touched}\\\"\\n    placeholder=\\\"1 egg&#10;3/4 cup milk\\\"></textarea>\\n    <div class=\\\"form-errors\\\"\\n    *ngIf=\\\"ingredients.invalid && ingredients.touched\\\">\\n      <small>\\n        <p *ngIf=\\\"ingredients.errors.required\\\">This field is required.</p>\\n      </small>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"directions\\\">Directions</label>\\n    <textarea formControlName=\\\"directions\\\"\\n    class=\\\"form-control\\\" rows=\\\"5\\\"\\n    [ngClass]=\\\"{'is-invalid': directions.invalid && directions.touched}\\\"\\n    placeholder=\\\"Prepare food.&#10;Cook food.\\\"></textarea>\\n    <div class=\\\"form-errors\\\"\\n    *ngIf=\\\"directions.invalid && directions.touched\\\">\\n      <small>\\n        <p *ngIf=\\\"directions.errors.required\\\">This field is required.</p>\\n      </small>\\n    </div>\\n  </div>\\n\\n  <button class=\\\"btn btn-outline-info\\\"\\n  type=\\\"submit\\\" [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n</form>\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-6 col-md-3 mb-1\\\" *ngFor=\\\"let recipe of recipes\\\">\\n    <app-recipe-card [recipe]=\\\"recipe\\\"\\n    routerLink=\\\"/recipe/{{recipe.id}}\\\"></app-recipe-card>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container mb-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8 offset-sm-2 content-section\\\">\\n      <h2>Login</h2>\\n      <form (ngSubmit)=\\\"login()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"username\\\">Username</label>\\n          <input type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                name=\\\"username\\\"\\n                #usernameField=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"username\\\">\\n          <div *ngIf=\\\"usernameField.errors && usernameField.errors.required\\\">\\n            <small>Username is Mandatory</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                name=\\\"password\\\"\\n                #passwordField=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"password\\\">\\n          <div *ngIf=\\\"passwordField.errors && passwordField.errors.required\\\">\\n            <small>Password is Mandatory</small>\\n          </div>\\n        </div>\\n\\n        <button type=\\\"submit\\\">Login</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container mb-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8 offset-sm-2 content-section\\\">\\n      <h2>Register</h2>\\n      <form (ngSubmit)=\\\"register()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"username\\\">Username</label>\\n          <input type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 name=\\\"username\\\"\\n                 #usernameField=\\\"ngModel\\\"\\n                 [(ngModel)]=\\\"username\\\">\\n          <div *ngIf=\\\"usernameField.errors && usernameField.errors.required\\\">\\n            <small>Username is Mandatory</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  required\\n                  name=\\\"email\\\"\\n                  #emailField=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"email\\\">\\n          <div *ngIf=\\\"emailField.errors && emailField.errors.required\\\">\\n            <small>Email is Mandatory</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                name=\\\"password\\\"\\n                #passwordField=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"password\\\">\\n          <div *ngIf=\\\"passwordField.errors && passwordField.errors.required\\\">\\n            <small>Password is Mandatory</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"confirmpassword\\\">Confirm Password</label>\\n            <input type=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  required\\n                  pattern=\\\"{{passwordField.value}}\\\"\\n                  name=\\\"confirmpassword\\\"\\n                  #confirmpasswordField=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"confirmpassword\\\">\\n            <div *ngIf=\\\"confirmpasswordField.errors && confirmpasswordField.touched\\\">\\n              <div *ngIf=\\\"confirmpasswordField.errors.required\\\">\\n                <small>This field is required</small>\\n              </div>\\n              <div *ngIf=\\\"confirmpasswordField.errors.pattern\\\">\\n                <small>Password and Confirm Password must match</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n        <button type=\\\"submit\\\">Register</button>          \\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecipeCreateComponent } from './recipes/recipe-create/recipe-create.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { RegisterComponent } from './users/register/register.component';\nimport { LoginComponent } from './users/login/login.component';\n\nconst routes: Routes = [\n  {path: \"\", pathMatch: \"full\", redirectTo: \"index\"},\n  {path: \"index\", component: RecipeListComponent},\n  {path: \"recipes/create\", component: RecipeCreateComponent},\n  {path: \"recipe/:id\", component: RecipeDetailComponent},\n  {path: \"recipe/:id/edit\", component: RecipeEditComponent},\n  {path: \"login\", component: LoginComponent},\n  {path: \"register\", component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'recipebox-frontend';\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    // try to fetch user from server\n    // if successful, it means the user is logged in.\n    this.userService.getUser().subscribe();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { Ng2ImgMaxModule } from 'ng2-img-max';\n\nimport { AppComponent } from './app.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeCreateComponent } from './recipes/recipe-create/recipe-create.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RegisterComponent } from './users/register/register.component';\nimport { LoginComponent } from './users/login/login.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\n\nimport { RecipeService } from './services/recipe.service';\nimport { UserService } from './services/user.service';\nimport { RecipeInterceptor } from './services/recipe.interceptor';\nimport { RecipeCardComponent } from './recipes/recipe-card/recipe-card.component';\nimport { RecipeFormComponent } from './recipes/recipe-form/recipe-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipeListComponent,\n    RecipeCreateComponent,\n    HeaderComponent,\n    RecipeDetailComponent,\n    RegisterComponent,\n    LoginComponent,\n    RecipeEditComponent,\n    RecipeCardComponent,\n    RecipeFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'csrftoken',\n      headerName: 'X-CSRFToken'\n    }),\n    Ng2ImgMaxModule\n  ],\n  providers: [\n    RecipeService,\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RecipeInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".bg-gray {\\r\\n  background-color: #6c737f;\\r\\n}\\r\\n\\r\\n.navbar-nav .nav-link {\\r\\n  color: #dee4e8;\\r\\n}\\r\\n\\r\\n.navbar-nav .nav-link:hover {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.navbar-nav .nav-link.active {\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n.link {\\r\\n  cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJnLWdyYXkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM2YzczN2Y7XHJcbn1cclxuXHJcbi5uYXZiYXItbmF2IC5uYXYtbGluayB7XHJcbiAgY29sb3I6ICNkZWU0ZTg7XHJcbn1cclxuICBcclxuLm5hdmJhci1uYXYgLm5hdi1saW5rOmhvdmVyIHtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxufVxyXG5cclxuLm5hdmJhci1uYXYgLm5hdi1saW5rLmFjdGl2ZSB7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLmxpbmsge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public logged_in: boolean = false;\n    \n  constructor(\n    public userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userService.isLoggedIn().subscribe(\n      (val) => {\n        this.logged_in = val});\n  }\n\n  logout() {\n    this.userService.logout().subscribe(() => {\n      this.router.navigate(['index']);\n    });    \n  }\n}\n","import { User } from './user';\n\nexport class Recipe {\n    public id: number = null;\n    public title: string = '';\n    public description: string = '';\n    public cook_time: string = '';\n    public servings: string = '';\n    public datePosted: string = '';\n    public image_file: string = '';\n    public ingredients: string = '';\n    public directions: string = '';\n    public user: User = null;\n    public made_it: boolean = false;\n\n    public constructor(init?: Partial<Recipe>) {\n        Object.assign(this, init);\n    }\n}\n","module.exports = \".home-recipe-pic {\\r\\n    max-height: 200px;\\r\\n    width: auto;\\r\\n    height: auto;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin: auto;\\r\\n}\\r\\n  \\r\\n.home-recipe-pic-div {\\r\\n    height: 200px;\\r\\n    position: relative;\\r\\n    background-color: #f1f1f1;\\r\\n    padding-top: 2px;\\r\\n}\\r\\n  \\r\\n.card {\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtY2FyZC9yZWNpcGUtY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixTQUFTO0lBQ1QsT0FBTztJQUNQLFFBQVE7SUFDUixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWNhcmQvcmVjaXBlLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob21lLXJlY2lwZS1waWMge1xyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG4gIFxyXG4uaG9tZS1yZWNpcGUtcGljLWRpdiB7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIHBhZGRpbmctdG9wOiAycHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSJdfQ== */\"","import { Component, Input } from '@angular/core';\n\nimport { Recipe } from '../../models/recipe';\n\n@Component({\n  selector: 'app-recipe-card',\n  templateUrl: './recipe-card.component.html',\n  styleUrls: ['./recipe-card.component.css']\n})\nexport class RecipeCardComponent {\n  @Input() recipe: Recipe;\n}\n","module.exports = \".form-errors {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtY3JlYXRlL3JlY2lwZS1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWNyZWF0ZS9yZWNpcGUtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1lcnJvcnMge1xyXG4gICAgY29sb3I6IHJlZDtcclxufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RecipeService } from '../../services/recipe.service';\nimport { Recipe } from 'src/app/models/recipe';\n\n@Component({\n  selector: 'app-recipe-create',\n  templateUrl: './recipe-create.component.html',\n  styleUrls: ['./recipe-create.component.css']\n})\nexport class RecipeCreateComponent {\n  constructor(\n    public recipeService: RecipeService,\n    private router: Router) { }\n\n  submit(recipe: Recipe) {\n    this.recipeService.createRecipe(recipe)\n      .subscribe(() => {\n        this.router.navigate(['index']);\n      });\n  }\n}\n","module.exports = \".recipe-pic {\\r\\n    max-width: 200px;\\r\\n    max-height: 200px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZGV0YWlsL3JlY2lwZS1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9yZWNpcGVzL3JlY2lwZS1kZXRhaWwvcmVjaXBlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlY2lwZS1waWMge1xyXG4gICAgbWF4LXdpZHRoOiAyMDBweDtcclxuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Recipe } from '../../models/recipe';\nimport { RecipeService } from '../../services/recipe.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  public recipe: Recipe;\n  public owner: boolean = false;\n  public logged_in: boolean = false;\n\n  constructor(private recipeService: RecipeService,\n              private userService: UserService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.logged_in = this.userService.logged_in;\n    const recipeId = this.route.snapshot.paramMap.get('id');\n    this.recipeService.getRecipe(+recipeId).subscribe(\n      (recipe) => {\n        this.recipe = recipe\n        if (this.userService.user) {\n          this.owner = this.userService.user.pk == recipe.user.pk;\n        }\n      });\n  }\n\n  make() {\n    this.recipeService.makeRecipe(this.recipe.id)\n      .subscribe(() => {\n        this.recipe.made_it = true;\n      });\n  }\n\n  unmake() {\n    this.recipeService.unmakeRecipe(this.recipe.id)\n      .subscribe(() => {\n        this.recipe.made_it = false;\n      });\n  }\n\n  delete() {\n    if (confirm('Are you sure you want to delete this recipe?')) {\n      this.recipeService.deleteRecipe(this.recipe.id)\n        .subscribe(() => {\n          console.log('Recipe deleted.');\n          this.router.navigate(['index']);\n        }, (err) => {\n          console.log(err.error.msg);\n        });\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWVkaXQvcmVjaXBlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RecipeService } from '../../services/recipe.service';\nimport { Recipe } from 'src/app/models/recipe';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  public recipe: Recipe;\n  private recipeId: string;\n\n  constructor(\n    public recipeService: RecipeService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.recipeId = this.route.snapshot.paramMap.get('id');\n    this.recipeService.getRecipe(+this.recipeId).subscribe(\n      (recipe) => {this.recipe = recipe});\n  }\n\n  update(recipe) {\n    this.recipeService.updateRecipe(+this.recipeId, recipe)\n      .subscribe(() => {\n        this.router.navigate(['index']);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWZvcm0vcmVjaXBlLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Ng2ImgMaxService } from 'ng2-img-max';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Recipe } from '../../models/recipe';\n\n@Component({\n  selector: 'app-recipe-form',\n  templateUrl: './recipe-form.component.html',\n  styleUrls: ['./recipe-form.component.css']\n})\nexport class RecipeFormComponent {\n  @Output() recipeSubmit = new EventEmitter<Recipe>();\n  \n  @Input() set recipe(initial: Recipe) {\n    if (initial) {\n      this.recipeForm.patchValue(initial);\n      this.img_preview = initial.image_file;\n    }\n  }\n\n  private recipeForm = this.fb.group({\n    title: ['', Validators.required],\n    description: [''],\n    servings: ['', Validators.required],\n    cook_time: ['', Validators.required],\n    ingredients: ['', Validators.required],\n    directions: ['', Validators.required],\n    image_file: ['']\n  });\n\n  private img: File;\n  private img_preview;\n\n  constructor(\n    private fb: FormBuilder,\n    private ng2ImgMax: Ng2ImgMaxService,\n    public sanitizer: DomSanitizer,\n    private http: HttpClient) { }\n\n  // getters for form controls\n  get title() { return this.recipeForm.get('title'); }\n  get description() { return this.recipeForm.get('description'); }\n  get servings() { return this.recipeForm.get('servings'); }\n  get cook_time() { return this.recipeForm.get('cook_time'); }\n  get ingredients() { return this.recipeForm.get('ingredients'); }\n  get directions() { return this.recipeForm.get('directions'); }\n  get image_file() { return this.recipeForm.get('image_file'); }\n  \n  // triggered on file input change\n  // resize image and upload to S3\n  upload_image(fileInput) {\n    if(fileInput.target.files && fileInput.target.files[0]) {\n      let image = fileInput.target.files[0];\n\n      this.ng2ImgMax.resizeImage(image, 200, 10000).subscribe(\n        result => {\n          this.img = new File([result], result.name);\n          this.get_preview(this.img);\n          this.get_signed_request(this.img);\n        }, err => {\n          console.warn('woops! ', err);\n        });\n    } else {\n      this.img = null;\n      this.img_preview = null;\n      this.image_file.setValue('');\n    }\n  }\n\n  // set the initial preview before upload\n  // This is good for the ~.5 sec while the\n  // image uploads to S3.\n  get_preview(file: File) {\n    const reader: FileReader = new FileReader();\n    reader.onload = ((e) => {\n        this.img_preview = e.target['result'];\n      });\n    reader.readAsDataURL(file);\n  }\n\n  // get a signed request for uploading to S3\n  get_signed_request(file: File) {\n    this.http.post(\"/api/sign_s3/\", {\n      \"file_name\": file.name,\n      \"file_type\": file.type\n    }).subscribe((resp) => {\n      this.upload_to_s3(file, resp['data'], resp['url']);\n    });\n  }\n\n  // upload the image to S3\n  upload_to_s3(file: File, s3Data, url: string) {\n    var postData = new FormData();\n    for (let key in s3Data.fields) {\n      postData.append(key, s3Data.fields[key]);\n    }\n    postData.append('file', file);\n\n    this.http.post(s3Data.url, postData)\n      .subscribe(() => {\n        console.log('Posted to s3.');\n        this.img_preview = url;\n        this.image_file.setValue(url);\n      });\n  }\n\n  onSubmit() {\n    this.recipeSubmit.emit(new Recipe(this.recipeForm.value));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../../services/recipe.service';\nimport { Recipe } from 'src/app/models/recipe';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\n  recipes: Recipe[];\n  \n  constructor(public recipeService: RecipeService) { }\n\n  ngOnInit() {\n    this.recipeService.getRecipes().subscribe(\n      (recipes) => {\n        this.recipes = recipes\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class RecipeInterceptor implements HttpInterceptor {\r\n    constructor(private userService: UserService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.userService.logged_in && req.url != 'https://flask-recipebox.s3.amazonaws.com/') {\r\n            const authReq = req.clone({\r\n                withCredentials: true\r\n            });\r\n            req = authReq;\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Recipe } from '../models/recipe';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  constructor(private http: HttpClient) { }\n  \n  public createRecipe(recipe: Recipe): Observable<any> {\n    return this.http.post('/api/recipes/', recipe);\n  }\n\n  public getRecipes(): Observable<Recipe[]> {\n    return this.http.get<Recipe[]>('/api/recipes/');\n  }\n\n  public getRecipe(id: Number): Observable<Recipe> {\n    return this.http.get<Recipe>(`/api/recipes/${id}`);\n  }\n\n  public updateRecipe(id: number, recipe: Recipe): Observable<any> {\n    return this.http.put(`/api/recipes/${id}`, recipe);\n  }\n\n  public deleteRecipe(id: number): Observable<any> {\n    return this.http.delete(`/api/recipes/${id}`);\n  }\n\n  public makeRecipe(id: number): Observable<any> {\n    return this.http.post(`/api/recipes/${id}/made/`, null);\n  }\n\n  public unmakeRecipe(id: number): Observable<any> {\n    return this.http.delete(`/api/recipes/${id}/made/`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private REGISTER_URL = '/api/register/';\n  private LOGIN_URL = '/rest-auth/login/';\n  private LOGOUT_URL = '/rest-auth/logout/';\n\n  private _user: User;\n  private _logged_in = new Subject<boolean>();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  set logged_in(val: boolean) {\n    this._logged_in.next(val);\n  }\n\n  get logged_in(): boolean {\n    return this._user != null;\n  }\n\n  set user(user: User) {\n    this._user = user;\n  }\n\n  get user(): User {\n    return this._user;\n  }\n\n  public getUser(): Observable<User> {\n    return this.http.get<User>('/rest-auth/user/')\n      .pipe(map((resp: User) => {\n        this._user = resp;\n        this._logged_in.next(true);\n        return resp;\n      }, () => {\n        this._logged_in.next(false);\n        return null;\n      }));\n  }\n\n  public login(username: string, password: string): Observable<any> {\n    return this.http.post(this.LOGIN_URL, {\n      username: username,\n      password: password\n    }).pipe(map((resp: any) => {\n        this.getUser().subscribe((resp) => {\n      });\n      return resp;\n    }));\n  }\n\n  public register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(this.REGISTER_URL, {\n      username: username,\n      email: email,\n      password: password\n    });\n  }\n\n  public logout() {\n    return this.http.post(this.LOGOUT_URL, null).pipe(map(() => {\n      this._logged_in.next(false);\n      this._user = null;\n    }));\n  }\n\n  public isLoggedIn(): Observable<boolean> {\n    return this._logged_in;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  public username: string = '';\n  public password: string = '';\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  login() {\n    this.userService.login(this.username, this.password)\n      .subscribe(() => {\n        console.log('Sucessfully logged in.');\n        this.router.navigate(['index']);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  public username: string = '';\n  public email: string = '';\n  public password: string = '';\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  register() {\n    this.userService.register(this.username, this.email, this.password)\n      .subscribe(() => {\n        console.log('Successfully registered!');\n        this.router.navigate(['login']);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}